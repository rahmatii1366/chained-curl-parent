name: 'register-creditor'
provide:
  supplier:
    ledger-id: ledgerIdSupplier
    merchant-name: merchantNameSupplier
    merchant-code: merchantCodeSupplier
    redirect-url: redirectUrlSupplier
  fix:
    mandateStartDate: 'as-date&now&as-persian-date&format:yyMMdd'
    mandateEndDate: 'as-date&now&as-persian-date&plus:year:1&format:yyMMdd'
chain:
  authenticate:
    provide:
      input:
        apiKey:
          type: text
          pattern: ^[a-zA-Z0-9_]*$
          length: 8
        secretKey:
          type: text
    curl:
      - '-X POST http://localhost:8083/api/v1/auth/authenticate'
      - '-H Content-Type: application/json'
      - '-d $(body:{ "apiKey": "$(input#apiKey#as-string)", "secretKey": "$(input#secretKey#as-string)" })'
      #    - $(file:authenticate.json)
    continueConditions:
      - '$(status:200)'
  creditor-register:
    provide:
      supplier:
        merchant-code: merchantCodeSupplier
    startConditions:
      - '$(status#authenticate#as-int#equal:200)'
    curl:
      - '-X POST http://localhost:8083/api/v1/creditor/register'
      - '-H Content-Type: application/json'
      - '-H Authorization: Bearer $(res-json#authenticate:access_token#as-string)'
      - '-d $(body:{ "merchantCode": "$(supplier#merchant-code#as-string)", "merchantFullName": "$(supplier#provide:merchant-name#as-string)", "ledgerId": "$(supplier#provide:ledger-id#as-string)", "merchantName": "$(supplier#provide:merchant-name#as-string)", "redirectUrl": "$(supplier#provide:redirect-url#as-string)", "settlementInterval": 4 })'
    continueConditions:
      - '$(status:200)'
    extract:
      apiKey: '$(res-json#apiKey#as-string)'